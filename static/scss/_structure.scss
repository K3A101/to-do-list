@use 'helpers/mixins' as *;

html {
  font-size: 62.5%; // Set default px to 10px, so 16px is 1.6rem
  scroll-behavior: smooth;
}

html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
}

body {
  font-family: var(--font-stack);
  font-optical-sizing: auto;
  font-weight: 400;
  font-size: 1.6rem;
  min-height: 100%;
  font-style: normal;
  background: var(--primary);
  color: var(--text);
}

header#top {
  background-color: white;
  position: sticky;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 150; // higher z-index than nav.off-canvas-nav .menu
}

header#top,
footer#bottom>*,
.layout-grid {
  --padding-inline: 3rem;
  --content-max-width: 60rem;
  --breakout-max-size: 126rem;
  --breakout-size: calc((var(--breakout-max-size) - var(--content-max-width)) / 2);
  display: grid;
  grid-template-columns:
    [full-width-start] minmax(var(--padding-inline), 1fr) [breakout-start] minmax(0, var(--breakout-size)) [content-start] min(100% - (var(--padding-inline) * 2), var(--content-max-width)) [content-end] minmax(0, var(--breakout-size)) [breakout-end] minmax(var(--padding-inline), 1fr) [full-width-end];

  @include respond-to(up-to-sm) {
    --padding-inline: 1.5rem;
  }

  @include respond-to(from-md) {
    --content-max-width: 70rem;
    --padding-inline: 3rem;
  }

  @include respond-to(from-lg) {
    --content-max-width: 110rem;
    --breakout-max-size: 168rem;
  }

  @include respond-to(from-xxl) {
    --content-max-width: 110rem;
  }

  &.two-third {
    --content-max-width: 108rem;
    --breakout-max-size: 128rem;
  }

  &.half {
    --content-max-width: 72rem;
    --breakout-max-size: 84rem;
  }

  > :not(.breakout, .full-width) {
    grid-column: content;
  }

  >.breakout {
    grid-column: breakout;
  }

  >.full-width {
    grid-column: full-width;
  }

  img.wrapper-background {
    grid-column: auto;
  }
}

.displayed-name:not(:empty) {
  color: var(--background-light);
}


.dashboard {
  display: block;

  @include respond-to(from-md) {
  padding: 5rem;
  }

  &.hidden {
    display: none;
  }
}

.content-block {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: auto auto auto auto auto;
  gap: 1.5rem;

  @include respond-to(from-md) {
    grid-template-columns: repeat(2, auto);
  }

  @include respond-to(from-lg) {
    grid-template-columns: repeat(3, auto);
  }

  .date {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    border-radius: 3rem;
    border: .3rem solid var(--border);
    background: var(--background-light);
    padding: 2rem;
    gap: 1rem;
    box-shadow: var(--box-shadow);
    grid-column: span 2;
    grid-row: span 2;

    .day {
      font-size: 2rem;
      font-family: 'Minecraft Bold', sans-serif;
      font-weight: 700;
    }

    .date-number {
      font-size: 4rem;
      color: var(--text-light);
      background: var(--primary);
      border-radius: 50%;
      aspect-ratio: 1/1;
      padding: 2rem;
      display: inline-flex;
      align-items: center;
      justify-content: center;
    }
  }

  .progression {
    display: flex;
    flex-direction: column;
    align-items: center;
    border-radius: 3rem;
    border: .3rem solid var(--border);
    background: var(--background-light);
    padding: 2rem;
    gap: .5rem;
    box-shadow: var(--box-shadow);
    height: fit-content;
    grid-column: 3/4;
    grid-row: span 1;

    h2 {
      font-weight: 700;
      font-size: 2rem;
    }

    .progress-outer {
      width: 100%;
      height: auto;
      border-radius: 3rem;
      background: var(--background);
      overflow: hidden;

      .progress-bar {
        height: 2.5rem;
        background: var(--primary-alt-2);
        border-radius: 3rem;
        margin: .4rem;
        width: 0%;
        transition: width var(--duration) var(--ease);
      }
    }
  }

  .task-list-container {
    border-radius: 3rem;
    border: .3rem solid var(--border);
    background: var(--background-light);
    padding: 2rem;
    gap: .5rem;
    box-shadow: var(--box-shadow);
    height: 30rem;
    overflow: hidden;
    grid-column: 1/4;
    grid-row: 3/-4;


    .tasks-list {
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      width: 100%;
      height: 80%;
      overflow: scroll;
      list-style: none;


      li {
        position: relative;
        padding-left: 3rem;
        display: inline-flex;
        flex-direction: row;
        align-items: center;
        word-wrap: break-word;
        padding-block: 1rem;

        &::before {
          content: '';
          position: absolute;
          display: flex;
          justify-content: center;
          align-items: center;
          left: 0;
          width: 2rem;
          height: 2rem;
          background: url(../images/leaf.svg);
          background-size: contain;
          background-repeat: no-repeat;
        }

        &:not(:last-child) {
          border-bottom: .1rem solid var(--border);
        }
        &:has(input[type="checkbox"]:checked) {
          text-decoration: line-through;

        }
      }

    }
  }

  .finish {
    grid-row: 4;
    place-self: end;
    grid-column: 2;

    .finish-button {
      text-transform: uppercase;
      appearance: none;
      border: .2rem solid var(--background-dark);
      background: var(--primary-alt-3);
      color: var(--text-light);
      box-shadow: var(--box-shadow);
      border-radius: .5rem;
      padding: 1.6rem 3rem;
      font-family: 'Minecraft Regular', sans-serif;
      font-size: 2rem;
      cursor: pointer;

    }
  }
}

.layout-grid:has(.create-profile) {
  overflow: hidden;

  @include respond-to(from-md) {
      height: 50vw;
  }
}

.create-profile {
  justify-self: center;
  align-items: center;
  place-self: center;

}



footer#bottom {
  background: var(--primary);

  .footer-content {
    display: grid;
    grid-template-columns: 1fr;

    @include respond-to(from-md) {
      grid-template-columns: 1fr 1fr;
    }

    @include respond-to(from-lg) {
      grid-template-columns: 1fr 1fr 1fr;
    }
  }
}